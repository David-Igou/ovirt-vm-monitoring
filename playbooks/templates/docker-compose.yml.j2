version: '2.1'

networks:
 node_1:
   external:
     name: node_1

services:
 ovirt-vm-prometheus-bridge:
   image: igou/ovirt-vm-prometheus-bridge
   volumes:
     - ./targets
   command: ["-no-verify", "-engine-url={{ engine_hostname }}", "-host-port=9100", "-output=/targets/hosts.json"]
   environment:
     - ENGINE_PASSWORD={{ engine_password}}

 prometheus:
   image: prom/prometheus
   container_name: prometheus
   volumes:
     - ./prometheus:/etc/prometheus
#     - /tmp/prom/prometheus/1:/prometheus
   volumes_from:
     - ovirt-vm-prometheus-bridge
   command:
     - '--config.file=/etc/prometheus/prometheus.yml'
     - '--storage.tsdb.path=/prometheus'
   ports:
     - 9090:9090
   networks:
     - node_1
   restart: always


 alertmanager:
   image: prom/alertmanager
   container_name: alertmanager
   ports:
     - 9093:9093
     - 6783:6783
     - 9094:9094
   volumes:
     - ./alertmanager:/etc/alertmanager
   command:
     - '--config.file=/etc/alertmanager/config.yml'
     - '--storage.path=/alertmanager'
{% for host in groups['monitoring'] %}
     - '--cluster.peer={{ host }}:9094'
{% endfor %}
   networks:
     - node_1
   restart: always

 node-exporter:
   image: prom/node-exporter
   container_name: node-exporter
   volumes:
     - /proc:/host/proc:ro
     - /sys:/host/sys:ro
     - /:/rootfs:ro
   command:
     - '--path.procfs=/host/proc'
     - '--path.sysfs=/host/sys'
     - --collector.filesystem.ignored-mount-points
     - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
   ports:
     - 9100:9100
   networks:
     - node_1
   restart: always

 grafana:
   image: grafana/grafana
   depends_on:
     - prometheus
   volumes:
     - ./grafana/provisioning:/etc/grafana/provisioning
   ports:
     - 3000:3000
   networks:
     - node_1
